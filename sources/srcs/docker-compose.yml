name: ${PROJECT_NAME}

services:
  db_postgres:
    image: ${POSTGRES_IMAGE}
    container_name: ${POSTGRES_CONTAINER}
    pull_policy: never
    build: ./requirements/db_postgres/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - HEALTHFLAG_FILE=${HEALTHFLAG_FILE}
    healthcheck: #&file_healthcheck
      test: ["CMD-SHELL", "test -f $HEALTHFLAG_FILE || exit 1"]
      interval: 2s
      timeout: 15s
      retries: 3
      start_period: 20s
    expose:
      - ${POSTGRES_PORT}
    networks:
      - ${NETWORK_NAME}
    # restart: on-failure

  web:
    depends_on:
      db_postgres:
        condition: service_healthy
        restart: true
    image: ${WEB_IMAGE}
    container_name: ${WEB_CONTAINER}
    pull_policy: never
    build:
      context: ./requirements/web/
      args:
        - STATICFILES_DIR=${STATICFILES_DIR}
    environment:
      - WEB_ENTRYPOINT=${WEB_ENTRYPOINT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - RESOLVED_PG_HOSTNAME=${RESOLVED_PG_HOSTNAME}
      - GUNICORN_CMD_ARGS=${GUNICORN_CMD_ACTIVE_OPTIONS}
      - STATICFILES_DIR=${STATICFILES_DIR}
      - HEALTHFLAG_FILE=${HEALTHFLAG_FILE}
    volumes:
      - webapps:/usr/src/apps
      - staticfiles:${STATICFILES_DIR}
    healthcheck: #*file_healthcheck
      test:
        [
          "CMD-SHELL",
          "curl -s  http://localhost:${WEB_PORT} | grep -q ''",
        ]
      interval: 5s
      timeout: 10s
      retries: 3
    expose:
      - ${WEB_PORT}
    networks:
      - ${NETWORK_NAME}
    ports:
      - 8888:${WEB_PORT}
    # restart: on-failure

  nginx:
    # depends_on:
    #   - web
    depends_on:
      web:
        condition: service_healthy
    image: ${NGINX_IMAGE}
    container_name: ${NGINX_CONTAINER}
    pull_policy: never
    build:
      context: ./requirements/nginx/
      args:
        - STATICFILES_DIR=${STATICFILES_DIR}
    volumes:
      - ./requirements/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./requirements/nginx/conf/web.conf:/etc/nginx/conf.d/web.conf
      - staticfiles:${STATICFILES_DIR}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s  http://localhost:80 | grep -q ''",
        ]
      interval: 5s
      timeout: 10s
      retries: 3
    ports:
      - ${NGINX_PORT}:80
    networks:
      - ${NETWORK_NAME}
    # restart: on-failure

networks:
  transcendance:
    driver: bridge

volumes:
  webapps:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WEBAPPS_VOLUME}
  staticfiles:
    driver: local