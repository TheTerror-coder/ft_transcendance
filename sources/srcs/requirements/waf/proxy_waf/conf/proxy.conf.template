# Nginx configuration for both HTTP and SSL
# Nginx configuration for reverse-proxying frontend and backend

server_tokens off;

log_format proxylog_format '{ "realip_remote_addr" : "$realip_remote_addr", "remote_user" : "$remote_user", "time_local": "[$time_local]", "request" : "$request", '
			'"status" : $status, "body_bytes_sent" : $body_bytes_sent, "http_referer" : "$http_referer", '
			'"http_user_agent" : "$http_user_agent", "http_x_forwarded_for" : "$http_x_forwarded_for"}';

map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

upstream frontendmediator {
	server		$FRONTEND_CONTAINER:$FRONTEND_HTTPS_PORT;
}

upstream backendmediator {
	server		$BACKEND_CONTAINER:$BACKEND_PORT;
}

upstream gameservermediator {
	server		$GAMESERVER_CONTAINER:$GAMESERVER_PORT;
}

server {
	listen $PROXYWAF_HTTP_PORT;

	server_name localhost $HOST_IP;
	set $always_redirect on;

	access_log /var/log/nginx/proxy.access.log proxylog_format;


	location / {
		client_max_body_size 0; # 0 disables the client request body size checking

		if ($always_redirect = on) {
			return 301 https://$host:$PROXYWAF_HTTPS_PORT$request_uri;
		}
	}

	include includes/location_common.conf;

}

server {
	listen $PROXYWAF_HTTPS_PORT ssl;
	listen [::]:$PROXYWAF_HTTPS_PORT ssl;

	server_name localhost $HOST_IP;
	#set $proxy_upstream http://frontendmediator;
	set $frontend_upstream https://frontendmediator; # TODO: uncomment at production
	# set $backend_upstream http://backendmediator;
	set $backend_upstream https://backendmediator; # TODO: uncomment at production
	# set $gameserver_upstream http://gameservermediator;
	set $gameserver_upstream https://gameservermediator;

	access_log /dev/stdout;
	access_log /var/log/nginx/proxy.access.log proxylog_format;

	ssl_certificate /usr/share/nginx/volumes/nginx/certs/nginx.crt;
	ssl_certificate_key /usr/share/nginx/volumes/nginx/certs/nginx.key;
	ssl_session_timeout 1d;
	ssl_session_cache shared:MozSSL:10m;
	ssl_session_tickets off;

	ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_prefer_server_ciphers off;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_verify_client off;
	ssl_verify_depth 1;

	# location ~* .(mp4|webm|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|pdf|txt|tar|wav|bmp|rtf|js|flv|swf)$
	# {
	# 	add_header	X-InStaticREGex-uri "$uri" always;
	# 	root   /usr/share/nginx/volumes/www/static/;
	# }

	##########################################
	###   Container Healthcheck Endpoint   ###
	##########################################
	location = /healthcheck {
		return 200 'healthy!\n';
	}

	##########################################
	### Django admin  static files routing ###
	##########################################
	location /static/admin/ {
		root   /usr/share/nginx/volumes/www;
		try_files	$uri $uri/ =404;
	}
	location /static/rest_framework/ {
		root   /usr/share/nginx/volumes/www;
		try_files	$uri $uri/ =404;
	}

	##########################################
	###         Frontend routing           ###
	##########################################
	location / {
		include includes/frontendshared_conf.conf;
	}
	location /frontpong/ {
		include includes/frontendshared_conf.conf;
	}

	##################################
	###       Backend routing      ###
	##################################
	location /admin/ {
		include includes/backendshared_conf.conf;
	}
	location /backpong/ {
		include includes/backendshared_conf.conf;
	}
	location /_allauth/ {
		include includes/backendshared_conf.conf;
	}
	location /accounts/ {
		include includes/backendshared_conf.conf;
	}
	### websockets ###
	location /websocket/ {
		include includes/backendshared_conf.conf;
	}


	##################################
	###     Gameserver routing     ###
	##################################
    location /backgame/ {
		include includes/gameservershared_conf.conf;
	}
    location /gameserver/ {
		include includes/gameservershared_conf.conf;
	}
	### websockets ###
    location /socket.io/ {
		include includes/gameservershared_conf.conf;
	}

	include includes/location_common.conf;
}