
# THE PROJECT
PROJECT_NAME			=ft_transcendance

# NETWORK
NETWORK_NAME			=transcendance
RESOLVED_NETWORK_NAME	=${PROJECT_NAME}_${NETWORK_NAME}


LTIME_ZONE				='UTC' #TODO: define

STATICFILES_DIR			=/usr/share/www/static/ # warning (better not change unless you know what you're doing)

# ELK STACK version
STACK_VERSION=8.14.1
# ALPINE version
ALPINE_VERSION=3.20.2
# All services common group ID
SHARED_GID=1010

#####################
###     VAULT     ###
#####################
VAULT_VERSION		=1.17.3
VAULT_UID			=100
VAULT_GID			=1000
VAULT_IMAGE			=vault # warning (better not change unless you know what you're doing)
VAULT_CONTAINER		=vault_c # warning (better not change unless you know what you're doing)
VAULT_HOME			=/vault
VAULT_ADDR			=https://localhost:8200
VAULT_CACERT		=${VAULT_HOME}/certs/ca/ca.crt
VAULT_API_PORT		=8200
VAULT_HEALTHFLAG	=${VAULT_HOME}/healthiness/.witness
RESOLVED_VAULT_HOSTNAME	=${VAULT_CONTAINER}.${RESOLVED_NETWORK_NAME}
VAULT_DIRS_TO_MAKE	="${VAULT_HOME}/healthiness ${VAULT_HOME}/certs"

#####################
###  VAULT_INIT   ###
#####################
VAULT_INIT_IMAGE		=vault_init # warning (better not change unless you know what you're doing)
VAULT_INIT_CONTAINER	=vault_init_c # warning (better not change unless you know what you're doing)
VAULT_INIT_CACERT		=${VAULT_HOME}/volumes/vault/certs/ca/ca.crt
VAULT_INIT_ADDR			=https://${VAULT_CONTAINER}:8200
VAULT_INIT_HEALTHFLAG	=${VAULT_HOME}/volumes/healthiness/.witness
VAULT_INIT_DIRS_TO_MAKE	="${VAULT_HOME}/container-init.d ${VAULT_HOME}/secrets ${VAULT_HOME}/volumes/healthiness ${VAULT_HOME}/volumes/backend/certs/ca ${VAULT_HOME}/volumes/vault/certs/ca ${VAULT_HOME}/volumes/nginx/certs/ca ${VAULT_HOME}/volumes/gameserver/certs/ca"

#####################
### DB POSTGRESQL ###
#####################
POSTGRES_TAG			=12.20-alpine3.20 # warning (better not change unless you know what you're doing)
POSTGRES_IMAGE			=db_postgres # warning (better not change unless you know what you're doing)
POSTGRES_CONTAINER		=db_postgres_c # warning (better not change unless you know what you're doing)
POSTGRES_UID			=70
POSTGRES_GID			=70
POSTGRES_HOME			=/usr/share/postgres
POSTGRES_USER			=pgdb
POSTGRES_DB				=pgdb
POSTGRES_PORT			=5432
POSTGRES_DATA			=${POSTGRES_HOME}/volumes/postgres
# RESOLVED HOSTNAMES
RESOLVED_PG_HOSTNAME	=${POSTGRES_CONTAINER}.${RESOLVED_NETWORK_NAME}
POSTGRES_DIRS_TO_MAKE	="${POSTGRES_HOME}/container-init.d ${POSTGRES_HOME}/secrets ${POSTGRES_HOME}/volumes/vault/certs ${POSTGRES_HOME}/volumes/postgres"
POSTGRES_VAULT_CACERT	=${POSTGRES_HOME}/volumes/vault/certs/ca/ca.crt

#####################
###     REDIS     ###
#####################
REDIS_TAG			=alpine3.20 # warning (better not change unless you know what you're doing)
REDIS_IMAGE			=redis # warning (better not change unless you know what you're doing)
REDIS_CONTAINER		=redis_c # warning (better not change unless you know what you're doing)
REDIS_UID			=999
REDIS_GID			=1000
REDIS_HOME			=/usr/share/redis
REDIS_USER			=pgdb
REDIS_DB			=pgdb
REDIS_PORT			=16379
REDIS_DATA			=${REDIS_HOME}/volumes/redis
RESOLVED_REDIS_HOSTNAME	=${REDIS_CONTAINER}.${RESOLVED_NETWORK_NAME}
REDIS_DIRS_TO_MAKE	="${REDIS_HOME}/container-init.d ${REDIS_HOME}/secrets ${REDIS_HOME}/volumes/vault/certs ${REDIS_HOME}/volumes/redis"
REDIS_VAULT_CACERT	=${REDIS_HOME}/volumes/vault/certs/ca/ca.crt

#####################
###     MAIL      ###
#####################
MAIL_IMAGE				=schickling/mailcatcher:master
MAIL_CONTAINER			=mail_c
MAIL_PORT				=1025
MAIL_UI_PORT			=1080

#########################
###     BACKEND       ###
#########################
RUN_DEVSERVER			=python manage.py runserver 0.0.0.0:8000 # runs django's native development server
RUN_GUNICORN			=gunicorn backend.wsgi # runs Gunicorn to serve django applications
BACKEND_ENTRYPOINT			=${RUN_DEVSERVER} # either ${RUN_DEVSERVER} either ${RUN_GUNICORN}
# BACKEND_ENTRYPOINT			=${RUN_GUNICORN} # either ${RUN_DEVSERVER} either ${RUN_GUNICORN}

BACKEND_SRCS				=./srcs/backend

BACKEND_TAG					=3.10.15-alpine3.20 # warning (better not change unless you know what you're doing)
BACKEND_IMAGE				=backend # warning (better not change unless you know what you're doing)
BACKEND_CONTAINER			=backend_c # warning (better not change unless you know what you're doing)
BACKEND_UID					=1111
BACKEND_GID					=1111
BACKEND_HOME				=/usr/share/backend
BACKEND_USER				=backend
BACKEND_PORT				=8000
RESOLVED_BACKEND_HOSTNAME	=${BACKEND_CONTAINER}.${RESOLVED_NETWORK_NAME}
BACKEND_ALT_NAMES			=localhost,backendmediator,${BACKEND_IMAGE},${BACKEND_CONTAINER},${RESOLVED_BACKEND_HOSTNAME}
BACKEND_SSL_DIR				=${BACKEND_HOME}/volumes/backend/certs
BACKEND_ROOT_CA				=${BACKEND_SSL_DIR}/ca/root_ca.crt
BACKEND_VAULT_CACERT		=${BACKEND_HOME}/volumes/vault/certs/ca/ca.crt
BACKEND_STATICFILES_DIR		=${BACKEND_HOME}/volumes/www/static # warning (better not change unless you know what you're doing)
BACKEND_MEDIA_DIR			=${BACKEND_HOME}/volumes/www/media # warning (better not change unless you know what you're doing)
BACKEND_DIRS_TO_MAKE		="${BACKEND_HOME}/apps ${BACKEND_HOME}/container-init.d ${BACKEND_HOME}/secrets ${BACKEND_HOME}/volumes/www/static ${BACKEND_HOME}/volumes/www/media ${BACKEND_HOME}/volumes/vault/certs ${BACKEND_HOME}/volumes/backend/certs"

GUNICORN_BIND_OPT		=--bind 0.0.0.0:${BACKEND_PORT}
GUNICORN_TLS_OPT		=--certfile ${BACKEND_SSL_DIR}/backend.crt --keyfile ${BACKEND_SSL_DIR}/backend.key --ca-certs ${BACKEND_ROOT_CA} --do-handshake-on-connect
GUNICORN_ACCESSLOG_OPT	=--access-logfile -
GUNICORN_LOGFORMAT_OPT	=--access-logformat '%({x-forwarded-for}i)s %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %({host}i)s'
GUNICORN_CMD_ACTIVE_OPTIONS	= ${GUNICORN_ACCESSLOG_OPT} ${GUNICORN_BIND_OPT} ${GUNICORN_TLS_OPT} ${GUNICORN_LOGFORMAT_OPT}

#####################
###  Game Server  ###
#####################
RUN_GAMESERVER_DEVSERVER	=python manage.py runserver 0.0.0.0:8001 # runs django's native development server
RUN_GAMESERVER_GUNICORN				=gunicorn gameserver.wsgi # runs Gunicorn to serve django applications
GAMESERVER_ENTRYPOINT			=${RUN_GAMESERVER_DEVSERVER} # either ${RUN_GAMESERVER_DEVSERVER} either ${RUN_GAMESERVER_GUNICORN}
# GAMESERVER_ENTRYPOINT			=${RUN_GAMESERVER_GUNICORN} # either ${RUN_GAMESERVER_DEVSERVER} either ${RUN_GAMESERVER_GUNICORN}

GAMESERVER_SRCS				=./srcs/gameserver

GAMESERVER_TAG					=3.10.15-alpine3.20 # warning (better not change unless you know what you're doing)
GAMESERVER_IMAGE				=gameserver # warning (better not change unless you know what you're doing)
GAMESERVER_CONTAINER			=gameserver_c # warning (better not change unless you know what you're doing)
GAMESERVER_UID					=1111
GAMESERVER_GID					=1111
GAMESERVER_HOME				=/usr/share/gameserver
GAMESERVER_USER				=gameserver
GAMESERVER_PORT				=8001
RESOLVED_GAMESERVER_HOSTNAME	=${GAMESERVER_CONTAINER}.${RESOLVED_NETWORK_NAME}
GAMESERVER_ALT_NAMES			=localhost,gameservermediator,${GAMESERVER_IMAGE},${GAMESERVER_CONTAINER},${RESOLVED_GAMESERVER_HOSTNAME}
GAMESERVER_SSL_DIR				=${GAMESERVER_HOME}/volumes/gameserver/certs
GAMESERVER_ROOT_CA				=${GAMESERVER_SSL_DIR}/ca/root_ca.crt
GAMESERVER_VAULT_CACERT		=${GAMESERVER_HOME}/volumes/vault/certs/ca/ca.crt
GAMESERVER_STATICFILES_DIR		=${GAMESERVER_HOME}/volumes/www/static # warning (better not change unless you know what you're doing)
GAMESERVER_DIRS_TO_MAKE		="${GAMESERVER_HOME}/apps ${GAMESERVER_HOME}/container-init.d ${GAMESERVER_HOME}/secrets ${GAMESERVER_HOME}/volumes/www/static ${GAMESERVER_HOME}/volumes/vault/certs ${GAMESERVER_HOME}/volumes/gameserver/certs"

GUNICORN_BIND_OPT		=--bind 0.0.0.0:${GAMESERVER_PORT}
GUNICORN_TLS_OPT		=--certfile ${GAMESERVER_SSL_DIR}/gameserver.crt --keyfile ${GAMESERVER_SSL_DIR}/gameserver.key --ca-certs ${GAMESERVER_ROOT_CA} --do-handshake-on-connect
GUNICORN_ACCESSLOG_OPT	=--access-logfile -
GUNICORN_LOGFORMAT_OPT	=--access-logformat '%({x-forwarded-for}i)s %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %({host}i)s'
GUNICORN_CMD_ACTIVE_OPTIONS	= ${GUNICORN_ACCESSLOG_OPT} ${GUNICORN_BIND_OPT} ${GUNICORN_TLS_OPT} ${GUNICORN_LOGFORMAT_OPT}

#######################
###    FRONTEND     ###
#######################
FRONTEND_TAG				=stable-alpine3.20-perl # warning (better not change unless you know what you're doing)
FRONTEND_IMAGE				=frontend # warning (better not change unless you know what you're doing)
FRONTEND_CONTAINER			=frontend_c # warning (better not change unless you know what you're doing)
FRONTEND_UID				=101
FRONTEND_GID				=101
FRONTEND_USER				=nginx
FRONTEND_HOME				=/usr/share/frontend
FRONTEND_HTTP_PORT			=3880 # warning (better not change unless you know what you're doing)
FRONTEND_HTTPS_PORT			=3443 # warning (better not change unless you know what you're doing)
FRONTEND_STATICFILES_DIR	=${FRONTEND_HOME}/volumes/www/static # warning (better not change unless you know what you're doing)
FRONTEND_VAULT_CACERT		=${FRONTEND_HOME}/volumes/vault/certs/ca/ca.crt
RESOLVED_FRONTEND_HOSTNAME	=${FRONTEND_CONTAINER}.${RESOLVED_NETWORK_NAME}
FRONTEND_DIRS_TO_MAKE		="${FRONTEND_HOME}/volumes/www/static ${FRONTEND_HOME}/volumes/vault/certs ${FRONTEND_HOME}/volumes/nginx/certs"
FRONTEND_ALT_NAMES			=localhost,frontendmediator,${FRONTEND_IMAGE},${FRONTEND_CONTAINER},${RESOLVED_FRONTEND_HOSTNAME}
FRONTEND_LOGS_ROOT			=/var/log

FRONTEND_SSL_DIR				=${FRONTEND_HOME}/volumes/nginx/certs
FRONTEND_ROOT_CA				=${FRONTEND_SSL_DIR}/ca/root_ca.crt
FRONTEND_LOG_FILES_DIR			=${FRONTEND_LOGS_ROOT}/nginx
FRONTEND_LOG_FILES				=${FRONTEND_LOG_FILES_DIR}/frontend.access.log ${FRONTEND_LOG_FILES_DIR}/all.error.log


#######################
### MODSECURITY WAF ###
#######################
PROXYWAF_IMAGE				=proxy_waf # warning (better not change unless you know what you're doing)
PROXYWAF_CONTAINER			=proxy_waf_c # warning (better not change unless you know what you're doing)
PROXYWAF_HTTP_PORT			=1880 # warning (better not change unless you know what you're doing)
PROXYWAF_HTTPS_PORT			=1443 # warning (better not change unless you know what you're doing)
RESOLVED_PROXYWAF_HOSTNAME	=${PROXYWAF_CONTAINER}.${RESOLVED_NETWORK_NAME}

VAULTWAF_IMAGE				=vault_waf # warning (better not change unless you know what you're doing)
VAULTWAF_CONTAINER			=vault_waf_c # warning (better not change unless you know what you're doing)
VAULTWAF_HTTP_PORT			=5880 # warning (better not change unless you know what you're doing)
VAULTWAF_HTTPS_PORT			=5443 # warning (better not change unless you know what you're doing)
RESOLVED_VAULTWAF_HOSTNAME	=${VAULTWAF_CONTAINER}.${RESOLVED_NETWORK_NAME}

### upstreams
UPSTREAM_NAMES				=frontendmediator,vaultmediator,backendmediator,gameservermediator

MODSECURITY_TAG				=4.6-nginx-alpine-202408280908 # warning (better not change unless you know what you're doing)
NGINX_UID					=101
NGINX_GID					=101
MODSEC_HOME					=/usr/share/nginx
MODSEC_USER					=nginx
MODSEC_ALT_NAMES			=localhost,onePong,${UPSTREAM_NAMES},${VAULTWAF_IMAGE},${VAULTWAF_CONTAINER},${RESOLVED_VAULTWAF_HOSTNAME},${RESOLVED_PROXYWAF_HOSTNAME}
MODSEC_VAULT_CACERT			=${MODSEC_HOME}/volumes/vault/certs/ca/ca.crt
MODSEC_DIRS_TO_MAKE			="${MODSEC_HOME}/volumes/www/static ${MODSEC_HOME}/volumes/vault/certs ${MODSEC_HOME}/volumes/nginx/certs"

MODSEC_LOGS_ROOT			=/var/log

MODSEC_ALLOWED_METHODS		=GET HEAD POST OPTIONS DELETE
MODSEC_AUDIT_LOG_PARTS		=AIJDEFHZ
MODSEC_DATA_DIR				=/tmp/modsecurity/data
MODSEC_AUDIT_LOG_DIR		=${MODSEC_LOGS_ROOT}/modsecurity/audit
MODSEC_AUDIT_LOG			=${MODSEC_AUDIT_LOG_DIR}/audit.log

MODSEC_DEBUG_LOG_DIR		=${MODSEC_LOGS_ROOT}/modsecurity/debug
MODSEC_DEBUG_LOG			=${MODSEC_DEBUG_LOG_DIR}/debug.log
MODSEC_DEBUG_LOGLEVEL		=3

NGINX_SSL_DIR				=${MODSEC_HOME}/volumes/nginx/certs
NGINX_ROOT_CA				=${NGINX_SSL_DIR}/ca/root_ca.crt
NGINX_STATICFILES_DIR		=${MODSEC_HOME}/volumes/www/static # warning (better not change unless you know what you're doing)
NGINX_LOG_FILES_DIR			=${MODSEC_LOGS_ROOT}/nginx
NGINX_LOG_FILES				=${NGINX_LOG_FILES_DIR}/backend.access.log ${NGINX_LOG_FILES_DIR}/vault.access.log ${NGINX_LOG_FILES_DIR}/all.error.log

# VOLUMES

# SECRETS

SECRET_ACCESS_TOKEN			=token1
PKI_ACCESS_TOKEN			=token2
ROOT_ACCESS_TOKEN			=myroot

# OTHERS
ALT_NAMES			=${MODSEC_ALT_NAMES},${BACKEND_ALT_NAMES},${FRONTEND_ALT_NAMES},${GAMESERVER_ALT_NAMES}
HEALTHFLAG_FILE		=/tmp/.witness
