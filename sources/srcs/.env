
# THE PROJECT
PROJECT_NAME			=ft_transcendance

# NETWORK
NETWORK_NAME			=transcendance
RESOLVED_NETWORK_NAME	=${PROJECT_NAME}_${NETWORK_NAME}


LTIME_ZONE				='UTC' #TODO: define

STATICFILES_DIR			=/usr/share/www/static/ # warning (better not change)

# ELK STACK version
STACK_VERSION=8.14.1
# ALPINE version
ALPINE_VERSION=3.20.2

#####################
###     SETUP     ###
#####################
SETUP_IMAGE			=setup # warning (better not change)
SETUP_CONTAINER		=setup_c # warning (better not change)

#####################
###     VAULT     ###
#####################
VAULT_VERSION		=1.17.3
VAULT_USER_UID		=100
VAULT_USER_GID		=1000
VAULT_IMAGE			=vault # warning (better not change)
VAULT_CONTAINER		=vault_c # warning (better not change)
VAULT_ADDR			=https://localhost:8200
VAULT_CACERT		=/vault/certs/ca/ca.crt
VAULT_API_PORT		=8200
RESOLVED_VAULT_HOSTNAME	=${VAULT_CONTAINER}.${RESOLVED_NETWORK_NAME}

#####################
###  VAULT_INIT   ###
#####################
VAULT_INIT_IMAGE		=vault_init # warning (better not change)
VAULT_INIT_CONTAINER	=vault_init_c # warning (better not change)
VAULT_INIT_ADDR			=https://${VAULT_CONTAINER}:8200
# VAULT_API_PORT			=8200
# VAULT_TOKEN_ID_LOCALFILE=/run/secrets/token_id_file
# VAULT_TOKEN_ID_HOSTFILE	=./secrets/token_id_file

#####################
### DB POSTGRESQL ###
#####################
POSTGRES_IMAGE			=db_postgres # warning (better not change)
POSTGRES_CONTAINER		=db_postgres_c # warning (better not change)
POSTGRES_USER			=pgdb
POSTGRES_PASSWORD		=pgdb
POSTGRES_PASSWORD_HOSTFILE		=./secrets/postgres_pass_file
POSTGRES_PASSWORD_LOCALFILE		=/run/secrets/postgres_pass_file
POSTGRES_DB				=pgdb
POSTGRES_PORT			=5432
RESOLVED_PG_HOSTNAME	=${POSTGRES_CONTAINER}.${RESOLVED_NETWORK_NAME}

#####################
####### WEB #########
#####################
RUN_DEVSERVER			=python manage.py runserver 0.0.0.0:8000 # runs django's native development server
RUN_GUNICORN			=gunicorn web.wsgi # runs Gunicorn to serve django applications
WEB_ENTRYPOINT			=${RUN_DEVSERVER} # either ${RUN_DEVSERVER} either ${RUN_GUNICORN}
# WEB_ENTRYPOINT			=${RUN_GUNICORN} # either ${RUN_DEVSERVER} either ${RUN_GUNICORN}

WEB_IMAGE				=web # warning (better not change)
WEB_CONTAINER			=web_c # warning (better not change)
WEB_PORT				=8000
RESOLVED_WEB_HOSTNAME	=${WEB_CONTAINER}.${RESOLVED_NETWORK_NAME}
WEB_ALT_NAMES			=localhost,webmediator,${WEB_IMAGE},${WEB_CONTAINER},${RESOLVED_WEB_HOSTNAME}
WEB_SSL_DIR				=/volumes/web/certs
WEB_ROOT_CA				=${WEB_SSL_DIR}/ca/root_ca.crt

GUNICORN_BIND_OPT		=--bind 0.0.0.0:8000
GUNICORN_TLS_OPT		=--certfile ${WEB_SSL_DIR}/web.crt --keyfile ${WEB_SSL_DIR}/web.key --ca-certs ${WEB_ROOT_CA} --do-handshake-on-connect
GUNICORN_ACCESSLOG_OPT	=--access-logfile -
GUNICORN_LOGFORMAT_OPT	=--access-logformat '%({x-forwarded-for}i)s %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %({host}i)s'
GUNICORN_CMD_ACTIVE_OPTIONS	= ${GUNICORN_ACCESSLOG_OPT} ${GUNICORN_BIND_OPT} ${GUNICORN_TLS_OPT} ${GUNICORN_LOGFORMAT_OPT}

#####################
###### NGINX ########
#####################
NGINX_IMAGE				=nginx # warning (better not change)
NGINX_CONTAINER			=nginx_c # warning (better not change)
NGINX_HTTP_PORT			=8080
NGINX_HTTPS_PORT		=443
RESOLVED_NGINX_HOSTNAME	=${NGINX_CONTAINER}.${RESOLVED_NETWORK_NAME}
NGINX_ALT_NAMES			=transcendance.fr,www.transcendance.fr,localhost,${NGINX_IMAGE},${NGINX_CONTAINER},${RESOLVED_NGINX_HOSTNAME}

# VOLUMES
WEBAPPS_VOLUME			=./requirements/web/webapps/
PATHTO_WEBAPPS_DATA		=./srcs/${WEBAPPS_VOLUME}


# DEBUG
DEBUG_WP				=1

# OTHERS
ALT_NAMES			=${NGINX_ALT_NAMES}${WEB_ALT_NAMES}
HEALTHFLAG_FILE		=/var/run/.witness
