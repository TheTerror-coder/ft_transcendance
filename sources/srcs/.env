
# THE PROJECT
PROJECT_NAME			=ft_transcendance

# NETWORK
NETWORK_NAME			=transcendance
RESOLVED_NETWORK_NAME	=${PROJECT_NAME}_${NETWORK_NAME}


LTIME_ZONE				='UTC' #TODO: define

STATICFILES_DIR			=/usr/share/www/static/ # warning (better not change)

# ELK STACK version
STACK_VERSION=8.14.1
# ALPINE version
ALPINE_VERSION=3.20.2
# All services common group ID
SHARED_GID=1010

#####################
###     SETUP     ###
#####################
SETUP_IMAGE			=setup # warning (better not change)
SETUP_CONTAINER		=setup_c # warning (better not change)
SETUP_HOME			="/usr/share/setup"
SETUP_DIRS_TO_MAKE	="${SETUP_HOME}/vault/certs/ca"
SETUP_UID			=1111
SETUP_GID			=1111

#####################
###     VAULT     ###
#####################
VAULT_VERSION		=1.17.3
VAULT_UID			=100
VAULT_GID			=1000
VAULT_IMAGE			=vault # warning (better not change)
VAULT_CONTAINER		=vault_c # warning (better not change)
VAULT_HOME			=/vault
VAULT_ADDR			=https://localhost:8200
VAULT_CACERT		=${VAULT_HOME}/certs/ca/ca.crt
VAULT_API_PORT		=8200
VAULT_HEALTHFLAG	=${VAULT_HOME}/healthiness/.witness
RESOLVED_VAULT_HOSTNAME	=${VAULT_CONTAINER}.${RESOLVED_NETWORK_NAME}
VAULT_DIRS_TO_MAKE	="${VAULT_HOME}/healthiness ${VAULT_HOME}/certs"

#####################
###  VAULT_INIT   ###
#####################
VAULT_INIT_IMAGE		=vault_init # warning (better not change)
VAULT_INIT_CONTAINER	=vault_init_c # warning (better not change)
VAULT_INIT_CACERT		=${VAULT_HOME}/volumes/vault/certs/ca/ca.crt
VAULT_INIT_ADDR			=https://${VAULT_CONTAINER}:8200
VAULT_INIT_HEALTHFLAG	=${VAULT_HOME}/volumes/healthiness/.witness
VAULT_INIT_DIRS_TO_MAKE	="${VAULT_HOME}/container-init.d ${VAULT_HOME}/volumes/healthiness ${VAULT_HOME}/volumes/web/certs/ca ${VAULT_HOME}/volumes/vault/certs/ca ${VAULT_HOME}/volumes/nginx/certs/ca"

#####################
### DB POSTGRESQL ###
#####################
POSTGRES_TAG			=12.20-alpine3.20 # warning (better not change)
POSTGRES_IMAGE			=db_postgres # warning (better not change)
POSTGRES_CONTAINER		=db_postgres_c # warning (better not change)
POSTGRES_UID			=70
POSTGRES_GID			=70
POSTGRES_HOME			=/usr/share/postgres
POSTGRES_USER			=pgdb
POSTGRES_DB				=pgdb
POSTGRES_PORT			=5432
RESOLVED_PG_HOSTNAME	=${POSTGRES_CONTAINER}.${RESOLVED_NETWORK_NAME}
POSTGRES_DIRS_TO_MAKE	="${POSTGRES_HOME}/container-init.d ${POSTGRES_HOME}/volumes/vault/certs"
POSTGRES_VAULT_CACERT	=${POSTGRES_HOME}/volumes/vault/certs/ca/ca.crt

#####################
####### WEB #########
#####################
RUN_DEVSERVER			=python manage.py runserver 0.0.0.0:8000 # runs django's native development server
RUN_GUNICORN			=gunicorn web.wsgi # runs Gunicorn to serve django applications
# WEB_ENTRYPOINT			=${RUN_DEVSERVER} # either ${RUN_DEVSERVER} either ${RUN_GUNICORN}
WEB_ENTRYPOINT			=${RUN_GUNICORN} # either ${RUN_DEVSERVER} either ${RUN_GUNICORN}

WEB_TAG					=3.10.15-alpine3.20 # warning (better not change)
WEB_IMAGE				=web # warning (better not change)
WEB_CONTAINER			=web_c # warning (better not change)
WEB_UID					=1111
WEB_GID					=1111
WEB_HOME				=/usr/share/web
WEB_USER				=web
WEB_PORT				=8000
RESOLVED_WEB_HOSTNAME	=${WEB_CONTAINER}.${RESOLVED_NETWORK_NAME}
WEB_ALT_NAMES			=localhost,webmediator,${WEB_IMAGE},${WEB_CONTAINER},${RESOLVED_WEB_HOSTNAME}
WEB_SSL_DIR				=${WEB_HOME}/volumes/web/certs
WEB_ROOT_CA				=${WEB_SSL_DIR}/ca/root_ca.crt
WEB_VAULT_CACERT		=${WEB_HOME}/volumes/vault/certs/ca/ca.crt
WEB_STATICFILES_DIR		=${WEB_HOME}/volumes/www/static # warning (better not change)
WEB_DIRS_TO_MAKE		="${WEB_HOME}/apps ${WEB_HOME}/container-init.d ${WEB_HOME}/volumes/www/static ${WEB_HOME}/volumes/vault/certs ${WEB_HOME}/volumes/web/certs"

GUNICORN_BIND_OPT		=--bind 0.0.0.0:8000
GUNICORN_TLS_OPT		=--certfile ${WEB_SSL_DIR}/web.crt --keyfile ${WEB_SSL_DIR}/web.key --ca-certs ${WEB_ROOT_CA} --do-handshake-on-connect
GUNICORN_ACCESSLOG_OPT	=--access-logfile -
GUNICORN_LOGFORMAT_OPT	=--access-logformat '%({x-forwarded-for}i)s %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %({host}i)s'
GUNICORN_CMD_ACTIVE_OPTIONS	= ${GUNICORN_ACCESSLOG_OPT} ${GUNICORN_BIND_OPT} ${GUNICORN_TLS_OPT} ${GUNICORN_LOGFORMAT_OPT}

##############################
###### MODSECURITY WAF #######
##############################
MODSECURITY_TAG				=4.6-nginx-alpine-202408280908 # warning (better not change)
MODSEC_IMAGE				=waf # warning (better not change)
MODSEC_CONTAINER			=waf_c # warning (better not change)
MODSEC_UID					=101
MODSEC_GID					=101
MODSEC_HOME					=/usr/share/nginx
MODSEC_USER					=nginx
MODSEC_HTTP_PORT			=8080
MODSEC_HTTPS_PORT			=443
RESOLVED_MODSEC_HOSTNAME	=${MODSEC_CONTAINER}.${RESOLVED_NETWORK_NAME}
DOMAIN_NAMES				=transcendance.fr,www.transcendance.fr,vault.transcendance.fr,www.vault.transcendance.fr
MODSEC_ALT_NAMES			=localhost,${DOMAIN_NAMES},${MODSEC_IMAGE},${MODSEC_CONTAINER},${RESOLVED_MODSEC_HOSTNAME}
MODSEC_VAULT_CACERT			=${MODSEC_HOME}/volumes/vault/certs/ca/ca.crt
MODSEC_DIRS_TO_MAKE			="${MODSEC_HOME}/volumes/www/static ${MODSEC_HOME}/volumes/vault/certs ${MODSEC_HOME}/volumes/nginx/certs"

MODSEC_LOGS_ROOT			=/var/log

MODSEC_AUDIT_LOG_PARTS		=AIJDEFHZ
MODSEC_DATA_DIR				=/tmp/modsecurity/data
MODSEC_AUDIT_LOG_DIR		=${MODSEC_LOGS_ROOT}/modsecurity/audit
MODSEC_AUDIT_LOG			=${MODSEC_AUDIT_LOG_DIR}/audit.log

MODSEC_DEBUG_LOG_DIR		=${MODSEC_LOGS_ROOT}/modsecurity/debug
MODSEC_DEBUG_LOG			=${MODSEC_DEBUG_LOG_DIR}/debug.log
MODSEC_DEBUG_LOGLEVEL		=3

NGINX_SSL_DIR				=${MODSEC_HOME}/volumes/nginx/certs
NGINX_ROOT_CA				=${NGINX_SSL_DIR}/ca/root_ca.crt
NGINX_STATICFILES_DIR		=${MODSEC_HOME}/volumes/www/static # warning (better not change)
NGINX_LOG_FILES_DIR			=${MODSEC_LOGS_ROOT}/nginx
NGINX_LOG_FILES				=${NGINX_LOG_FILES_DIR}/web.access.log ${NGINX_LOG_FILES_DIR}/vault.access.log ${NGINX_LOG_FILES_DIR}/all.error.log

# VOLUMES
WEBAPPS_VOLUME			=./requirements/web/webapps/
PATHTO_WEBAPPS_DATA		=./srcs/${WEBAPPS_VOLUME}


# OTHERS
ALT_NAMES			=${MODSEC_ALT_NAMES},${WEB_ALT_NAMES}
HEALTHFLAG_FILE		=/tmp/.witness
